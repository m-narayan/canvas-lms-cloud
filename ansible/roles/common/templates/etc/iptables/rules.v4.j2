*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# Ethernet allows established/related, but does not allow invalid.
-A INPUT -i eth+ -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -i eth+ -m state --state INVALID -j DROP

# Ethernet allows ICMP echo (PING) with rate limiting.
-A INPUT -i eth+ -m state --state NEW -p icmp -m icmp --icmp-type echo-request -j ACCEPT
-I INPUT -i eth+ -m icmp -p icmp --icmp-type echo-request -m recent --set
-I INPUT -i eth+ -m icmp -p icmp --icmp-type echo-request -m recent --update --seconds 10 --hitcount 10 -j DROP

# Ethernet allows TCP on port 22 (SSH) with rate limiting.
-A INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-I INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 22 -m recent --set
-I INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 22 -m recent --update --seconds 10 --hitcount 5 -j DROP

{% if inventory_hostname in groups['proxy'] %}
# Host is a proxy, ethernet allows TCP on port 443 (HTTPS) with rate limiting.
-A INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT
-I INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 443 -m recent --set
-I INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 443 -m recent --update --seconds 5 --hitcount 20 -j DROP

# Host is a proxy, ethernet allows TCP on port 80 (HTTP) with rate limiting.
-A INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-I INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 80 -m recent --set
-I INPUT -i eth+ -m state --state NEW -m tcp -p tcp --dport 80 -m recent --update --seconds 5 --hitcount 20 -j DROP
{% endif %}

# Ethernet allows everything from administrators.
{% if administrators is not none %}
{% for a in administrators %}
-I INPUT -i eth+ -s {{ a.ipv4 }} -j ACCEPT
-I FORWARD -i eth+ -s {{ a.ipv4 }} -j ACCEPT
{% endfor %}
{% endif %}

# Ethernet allows everything from co-hosts.
{% for h in groups['all'] %}
{% if h != inventory_hostname %}
-I INPUT -i eth+ -s {{ hostvars[h].ansible_eth0.ipv4.address }} -j ACCEPT
-I FORWARD -i eth+ -s {{ hostvars[h].ansible_eth0.ipv4.address }} -j ACCEPT
{% endif %}
{% endfor %}

# Loopback allows everything.
-I INPUT -i lo -j ACCEPT
-I FORWARD -i lo -j ACCEPT

COMMIT
